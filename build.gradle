/*
 * Master Gradle build script
 */

import aQute.lib.io.IO

/* Configure the subprojects */
subprojects {
  if (plugins.hasPlugin('biz.aQute.bnd')) {
    /* test folders are not part of jar but used by unit tests  */
    def testfolders = ['testresources/', 'testdata/']
    jar {
      projectDirInputsExcludes << '.*'
      projectDirInputsExcludes += testfolders
    }
    test {
      testLogging {
        exceptionFormat 'full'
      }
      inputs.files fileTree(projectDir) {
        include testfolders
        exclude {
          def f = it.file
          if (f.directory && f.list().length == 0) {
            return true
          }
          try {
            return "git check-ignore ${f}".execute().waitFor() == 0
          } catch (Exception e) {
            return false
          }
        }
      }
      if (System.properties['maven.repo.local']) {
        systemProperty 'maven.repo.local', IO.getFile(rootProject.rootDir, System.properties['maven.repo.local'])
      }
    }
  }
}

task wrapper(type: Wrapper) {
  jarFile = rootProject.file('.gradle-wrapper/gradle-wrapper.jar')
}

task buildscriptDependencies {
  doLast {
    println "bnd_plugin: ${bnd_plugin}"
    println "bnd_repourl: ${bnd_repourl}"
    println buildscript.configurations.classpath.asPath
  }
}
